# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

strategy:
  matrix:
    linux:
      imageName: 'ubuntu-20.04'
    mac:
      imageName: 'macos-10.15'
    windows:
      imageName: 'windows-2022'

pool:
  vmImage: $(imageName)

steps:
- task: Gradle@1
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m -Dhttp.socketTimeout=60000 -Dhttp.connectionTimeout=60000'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    testRunTitle: $(imageName)
    tasks: 'clean build'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Pipeline.Workspace)' 
    artifactName: '$(imageName).zip'
  condition: failed()
