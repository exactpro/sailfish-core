#execute,#add_to_report,#description,#outcome,#reference,#reference_to_filter,#checkpoint,#timeout,#service_name,#action,#condition,#messages_count,#message_type,#dictionary,#static_type,#static_value,#verifications_order,#key_fields,Value1,~Value2,Value3,FString,FInteger
,,,,,,,,,global block start,,,,,,,,,,,,,
,,comment inside of block,,,,,,,,,,,,,,,,,,,,
,,,,sv,,,,,SetStatic,,,,,Integer,10,,,,,,,
,,this action will be ignored,,,,,1000,,AskForContinue,,,,,,,,,,,,,
,,,,,,,,,global block end,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,
n,,,,,,,,,first block start,,,,,,,,,,,,,
,,contents of non-executable block are not validated,,,,,-42,,foobar,,,,,,,,,,,,,
,,,,,,,,,first block end,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,
,n,add to report should be ignored on test case,,,,,,,test case start,,,,,,,,,,,,,
,,,,%{sn},,,,fake,DefineServiceName,,,,,,,,,,,,,
,,smart checkpoint definition,,,,,,,,,,,,,,,,,,,,
,,,,!cp1,,,,,GetCheckPoint,,,,,,,,,,,,,
,,"""generic:"" prefix is added here to test URI matching",,!cp2,,,,,generic:GetCheckPoint,,,,,,,,,,,,,
,,defined service name usage,,ssm,ssmf,,,%{sn},send,,,SimpleMessage,TestAML,,,,,,,,Some text 1,
n,,,og:on1,rsm1,,!cp1,1000,%{sn},receive,,,SimpleMessage,TestAML,,,"Value1, Value3:FAILED",,,,,x contains 'text',
,,extra spaces in outcome definition are ignored,og : on2,rsm2,,!cp2,1000,%{sn},receive,,,SimpleMessage,TestAML,,,"Value1, Value3:FAILED","FInteger, FString",,,,x contains 'text',1
,,reference in messages count,,,,,1000,%{sn},count,,1,SimpleMessage,TestAML,,,,,,,,*,
,,,,,,,,,repeat,,10,,,,,,,,,,,
,,static variable in timeout,,,,,%{sv},,Sleep,,,,,,,,,,,,,
,,,,,,,,,next,,,,,,,,,,,,,
,,,,,,,,,if,#{random(10)} < 5,,,,,,,,,,,,
,,,,,,,1000,,Sleep,,,,,,,,,,,,,
,,,,,,,,,endif,,,,,,,,,,,,,
,,,,,,,,,test case end,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,
,n,,,,,,,,last block start,,,,,,,,,,,,,
,,add to report should be inherited from block,,slp,,,1000,,Sleep,,,,,,,,,,,,,
,,,,,,,,,last block end,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,
n,,non-executable blocks should still increment matrix order,,,,,,,test case start,,,,,,,,,,,,,
,,,,,,,1000,,Sleep,,,,,,,,,,,,,
,,,,,,,,,test case end,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,test case start,,,,,,,,,,,,,
,,,,,,,1000,,Sleep,,,,,,,,,,,,,
,,,,,,,,,test case end,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,test case start,,,,,,,,,,,,,
,,simple value in message count for cycle,,,,,,,repeat,,1,,,,,,,,,,,
,,,,,,,,,next,,,,,,,,,,,,,
,,function call in message count for cycle,,,,,,,repeat,,"#{toInteger(""1"")}",,TestAML,,,,,,,,,
,,,,,,,,,next,,,,,,,,,,,,,
,,reference in message count for cycle,,,,,,,repeat,,1,,,,,,,,,,,
,,,,,,,,,next,,,,,,,,,,,,,
,,static variable in message count for cycle,,,,,,,repeat,,%{sv},,,,,,,,,,,
,,,,,,,,,next,,,,,,,,,,,,,
,,,,,,,,,test case end,,,,,,,,,,,,,
